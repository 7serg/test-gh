name: Start runner 

on:
  workflow_dispatch:

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::585768185180:role/github_oidc_role
          role-session-name: testSession

      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PAT }}
          ec2-image-id: ${{ vars.RUNNER_AMI }}
          ec2-instance-type: t2.micro
          subnet-id: ${{ vars.SUBNET_ID }}
          security-group-id: ${{ vars.SG_ID }}

  build:
    name: Build image
    needs: start-runner 
    runs-on: ${{ needs.start-runner.outputs.label }}
    permissions:
      id-token: write
      contents: read
    outputs:
        image_tag: ${{ steps.define-commit-hash.outputs.short_sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List files
        run: ls -al

      - name: Set outputs
        id: define-commit-hash
        run: |
            echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            echo "$(git rev-parse --short HEAD)" > commit_hash.txt


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
            role-to-assume: arn:aws:iam::585768185180:role/github_oidc_role
            aws-region: ${{ vars.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

    #   - name: Login to Amazon ECR
    #     run: |
    #         aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.ECR_REPO_URL }}

      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ vars.ECR_REPO_URL }}
            REPOSITORY: test_app
            IMAGE_TAG: ${{ steps.define-commit-hash.outputs.short_sha }}
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG


#   deploy:
#     name: Deploy to EKS
#     runs-on: ${{ needs.start-runner.outputs.label }}

#     steps:



#         - name: Read commit hash
#         id: read-commit-hash
#         run: |
#             export COMMIT_HASH=$(cat commit_hash.txt)
#             echo "commit_hash=$COMMIT_HASH" >> $GITHUB_ENV

#         - name: Checkout repository
#         uses: actions/checkout@v4
    

#         - name: Verify image exists
#         env:
#             REGISTRY: ${{ vars.ECR_REPO_URL }}
#             REPOSITORY: ${{ vars.REPO_NAME }}
#             IMAGE_TAG: ${{ env.commit_hash }}
#         run: |
#             aws ecr describe-images \
#             --repository-name ${REPOSITORY} \
#             --image-ids imageTag=${IMAGE_TAG} \
#             || { echo "Image tag ${IMAGE_TAG} not found in ECR"; exit 1; }            